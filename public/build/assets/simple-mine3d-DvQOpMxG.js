import{R as Z,l as p,m as ye,Q as A,n as V,L as R,f as O,g as D,B as ee,e as xe,M as h,o as oe,p as j,q as Te,r as N,s as fe,j as _e,E as Ye,t as Ie,u as Xe,S as Fe,C as we,P as Re,W as qe,v as Qe,b as $e,O as Ze,w as ue,x as Me,A as Ne,D as Ue,H as We,y as Ke,z as de,G as Je,V as te,k as be,i as je,I as et,J as tt,K as it,N as F,U as ze,X as Ae,Y as Q,Z as $}from"./OrbitControls-Dwqi_uo-.js";const Y=new Z,k=new p,B=new p,x=new A,Se={X:new p(1,0,0),Y:new p(0,1,0),Z:new p(0,0,1)},me={type:"change"},De={type:"mouseDown"},Ee={type:"mouseUp",mode:null},Pe={type:"objectChange"};class nt extends ye{constructor(e,t){super(),t===void 0&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),this.isTransformControls=!0,this.visible=!1,this.domElement=t,this.domElement.style.touchAction="none";const i=new ct;this._gizmo=i,this.add(i);const n=new ht;this._plane=n,this.add(n);const a=this;function s(w,g){let E=g;Object.defineProperty(a,w,{get:function(){return E!==void 0?E:g},set:function(v){E!==v&&(E=v,n[w]=v,i[w]=v,a.dispatchEvent({type:w+"-changed",value:v}),a.dispatchEvent(me))}}),a[w]=g,n[w]=g,i[w]=g}s("camera",e),s("object",void 0),s("enabled",!0),s("axis",null),s("mode","translate"),s("translationSnap",null),s("rotationSnap",null),s("scaleSnap",null),s("space","world"),s("size",1),s("dragging",!1),s("showX",!0),s("showY",!0),s("showZ",!0);const r=new p,l=new p,u=new A,o=new A,d=new p,c=new A,y=new p,f=new p,M=new p,P=0,C=new p;s("worldPosition",r),s("worldPositionStart",l),s("worldQuaternion",u),s("worldQuaternionStart",o),s("cameraPosition",d),s("cameraQuaternion",c),s("pointStart",y),s("pointEnd",f),s("rotationAxis",M),s("rotationAngle",P),s("eye",C),this._offset=new p,this._startNorm=new p,this._endNorm=new p,this._cameraScale=new p,this._parentPosition=new p,this._parentQuaternion=new A,this._parentQuaternionInv=new A,this._parentScale=new p,this._worldScaleStart=new p,this._worldQuaternionInv=new A,this._worldScale=new p,this._positionStart=new p,this._quaternionStart=new A,this._scaleStart=new p,this._getPointer=st.bind(this),this._onPointerDown=ot.bind(this),this._onPointerHover=at.bind(this),this._onPointerMove=rt.bind(this),this._onPointerUp=lt.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;Y.setFromCamera(e,this.camera);const t=ge(this._gizmo.picker[this.mode],Y);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e.button!==0)&&this.axis!==null){Y.setFromCamera(e,this.camera);const t=ge(this._plane,Y,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,De.mode=this.mode,this.dispatchEvent(De)}}pointerMove(e){const t=this.axis,i=this.mode,n=this.object;let a=this.space;if(i==="scale"?a="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(a="world"),n===void 0||t===null||this.dragging===!1||e.button!==-1)return;Y.setFromCamera(e,this.camera);const s=ge(this._plane,Y,!0);if(s){if(this.pointEnd.copy(s.point).sub(this.worldPositionStart),i==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),a==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),a==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(a==="local"&&(n.position.applyQuaternion(x.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),a==="world"&&(n.parent&&n.position.add(k.setFromMatrixPosition(n.parent.matrixWorld)),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(k.setFromMatrixPosition(n.parent.matrixWorld))));else if(i==="scale"){if(t.search("XYZ")!==-1){let r=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(r*=-1),B.set(r,r,r)}else k.copy(this.pointStart),B.copy(this.pointEnd),k.applyQuaternion(this._worldQuaternionInv),B.applyQuaternion(this._worldQuaternionInv),B.divide(k),t.search("X")===-1&&(B.x=1),t.search("Y")===-1&&(B.y=1),t.search("Z")===-1&&(B.z=1);n.scale.copy(this._scaleStart).multiply(B),this.scaleSnap&&(t.search("X")!==-1&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(i==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const r=20/this.worldPosition.distanceTo(k.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(k.copy(this.rotationAxis).cross(this.eye))*r):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(Se[t]),k.copy(Se[t]),a==="local"&&k.applyQuaternion(this.worldQuaternion),k.cross(this.eye),k.length()===0?l=!0:this.rotationAngle=this._offset.dot(k.normalize())*r),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),a==="local"&&t!=="E"&&t!=="XYZE"?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(x.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(x.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(me),this.dispatchEvent(Pe)}}pointerUp(e){e.button===0&&(this.dragging&&this.axis!==null&&(Ee.mode=this.mode,this.dispatchEvent(Ee)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}attach(e){return this.object=e,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(me),this.dispatchEvent(Pe),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Y}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function st(m){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:m.button};{const e=this.domElement.getBoundingClientRect();return{x:(m.clientX-e.left)/e.width*2-1,y:-(m.clientY-e.top)/e.height*2+1,button:m.button}}}function at(m){if(this.enabled)switch(m.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(m));break}}function ot(m){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(m.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(m)),this.pointerDown(this._getPointer(m)))}function rt(m){this.enabled&&this.pointerMove(this._getPointer(m))}function lt(m){this.enabled&&(this.domElement.releasePointerCapture(m.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(m)))}function ge(m,e,t){const i=e.intersectObject(m,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||t)return i[n];return!1}const re=new Ye,b=new p(0,1,0),Ce=new p(0,0,0),Oe=new Ie,le=new A,he=new A,z=new p,ke=new Ie,K=new p(1,0,0),X=new p(0,1,0),J=new p(0,0,1),ce=new p,U=new p,W=new p;class ct extends ye{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new V({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new R({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;const n=t.clone();n.opacity=.5;const a=e.clone();a.color.setHex(16711680);const s=e.clone();s.color.setHex(65280);const r=e.clone();r.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const u=e.clone();u.color.setHex(65280),u.opacity=.5;const o=e.clone();o.color.setHex(255),o.opacity=.5;const d=e.clone();d.opacity=.25;const c=e.clone();c.color.setHex(16776960),c.opacity=.25,e.clone().color.setHex(16776960);const f=e.clone();f.color.setHex(7895160);const M=new O(0,.04,.1,12);M.translate(0,.05,0);const P=new D(.08,.08,.08);P.translate(0,.04,0);const C=new ee;C.setAttribute("position",new xe([0,0,0,1,0,0],3));const w=new O(.0075,.0075,.5,3);w.translate(0,.25,0);function g(_,ie){const I=new N(_,.0075,3,64,ie*Math.PI*2);return I.rotateY(Math.PI/2),I.rotateX(Math.PI/2),I}function E(){const _=new ee;return _.setAttribute("position",new xe([0,0,0,1,1,1],3)),_}const v={X:[[new h(M,a),[.5,0,0],[0,0,-Math.PI/2]],[new h(M,a),[-.5,0,0],[0,0,Math.PI/2]],[new h(w,a),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new h(M,s),[0,.5,0]],[new h(M,s),[0,-.5,0],[Math.PI,0,0]],[new h(w,s)]],Z:[[new h(M,r),[0,0,.5],[Math.PI/2,0,0]],[new h(M,r),[0,0,-.5],[-Math.PI/2,0,0]],[new h(w,r),null,[Math.PI/2,0,0]]],XYZ:[[new h(new oe(.1,0),d.clone()),[0,0,0]]],XY:[[new h(new D(.15,.15,.01),o.clone()),[.15,.15,0]]],YZ:[[new h(new D(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new h(new D(.15,.15,.01),u.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},S={X:[[new h(new O(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new h(new O(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new h(new O(.2,0,.6,4),i),[0,.3,0]],[new h(new O(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new h(new O(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new h(new O(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new h(new oe(.2,0),i)]],XY:[[new h(new D(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new h(new D(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new h(new D(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},L={START:[[new h(new oe(.01,2),n),null,null,null,"helper"]],END:[[new h(new oe(.01,2),n),null,null,null,"helper"]],DELTA:[[new j(E(),n),null,null,null,"helper"]],X:[[new j(C,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new j(C,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new j(C,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},pe={XYZE:[[new h(g(.5,1),f),null,[0,Math.PI/2,0]]],X:[[new h(g(.5,.5),a)]],Y:[[new h(g(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new h(g(.5,.5),r),null,[0,Math.PI/2,0]]],E:[[new h(g(.75,1),c),null,[0,Math.PI/2,0]]]},G={AXIS:[[new j(C,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},He={XYZE:[[new h(new Te(.25,10,8),i)]],X:[[new h(new N(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new h(new N(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new h(new N(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new h(new N(.75,.1,2,24),i)]]},Le={X:[[new h(P,a),[.5,0,0],[0,0,-Math.PI/2]],[new h(w,a),[0,0,0],[0,0,-Math.PI/2]],[new h(P,a),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new h(P,s),[0,.5,0]],[new h(w,s)],[new h(P,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new h(P,r),[0,0,.5],[Math.PI/2,0,0]],[new h(w,r),[0,0,0],[Math.PI/2,0,0]],[new h(P,r),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new h(new D(.15,.15,.01),o),[.15,.15,0]]],YZ:[[new h(new D(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new h(new D(.15,.15,.01),u),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new h(new D(.1,.1,.1),d.clone())]]},Be={X:[[new h(new O(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new h(new O(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new h(new O(.2,0,.6,4),i),[0,.3,0]],[new h(new O(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new h(new O(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new h(new O(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new h(new D(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new h(new D(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new h(new D(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new h(new D(.2,.2,.2),i),[0,0,0]]]},Ve={X:[[new j(C,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new j(C,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new j(C,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function H(_){const ie=new ye;for(const I in _)for(let q=_[I].length;q--;){const T=_[I][q][0].clone(),ne=_[I][q][1],se=_[I][q][2],ae=_[I][q][3],Ge=_[I][q][4];T.name=I,T.tag=Ge,ne&&T.position.set(ne[0],ne[1],ne[2]),se&&T.rotation.set(se[0],se[1],se[2]),ae&&T.scale.set(ae[0],ae[1],ae[2]),T.updateMatrix();const ve=T.geometry.clone();ve.applyMatrix4(T.matrix),T.geometry=ve,T.renderOrder=1/0,T.position.set(0,0,0),T.rotation.set(0,0,0),T.scale.set(1,1,1),ie.add(T)}return ie}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=H(v)),this.add(this.gizmo.rotate=H(pe)),this.add(this.gizmo.scale=H(Le)),this.add(this.picker.translate=H(S)),this.add(this.picker.rotate=H(He)),this.add(this.picker.scale=H(Be)),this.add(this.helper.translate=H(L)),this.add(this.helper.rotate=H(G)),this.add(this.helper.scale=H(Ve)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const i=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:he;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let a=0;a<n.length;a++){const s=n[a];s.visible=!0,s.rotation.set(0,0,0),s.position.copy(this.worldPosition);let r;if(this.camera.isOrthographicCamera?r=(this.camera.top-this.camera.bottom)/this.camera.zoom:r=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),s.scale.set(1,1,1).multiplyScalar(r*this.size/4),s.tag==="helper"){s.visible=!1,s.name==="AXIS"?(s.visible=!!this.axis,this.axis==="X"&&(x.setFromEuler(re.set(0,0,0)),s.quaternion.copy(i).multiply(x),Math.abs(b.copy(K).applyQuaternion(i).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Y"&&(x.setFromEuler(re.set(0,0,Math.PI/2)),s.quaternion.copy(i).multiply(x),Math.abs(b.copy(X).applyQuaternion(i).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Z"&&(x.setFromEuler(re.set(0,Math.PI/2,0)),s.quaternion.copy(i).multiply(x),Math.abs(b.copy(J).applyQuaternion(i).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="XYZE"&&(x.setFromEuler(re.set(0,Math.PI/2,0)),b.copy(this.rotationAxis),s.quaternion.setFromRotationMatrix(Oe.lookAt(Ce,b,X)),s.quaternion.multiply(x),s.visible=this.dragging),this.axis==="E"&&(s.visible=!1)):s.name==="START"?(s.position.copy(this.worldPositionStart),s.visible=this.dragging):s.name==="END"?(s.position.copy(this.worldPosition),s.visible=this.dragging):s.name==="DELTA"?(s.position.copy(this.worldPositionStart),s.quaternion.copy(this.worldQuaternionStart),k.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),k.applyQuaternion(this.worldQuaternionStart.clone().invert()),s.scale.copy(k),s.visible=this.dragging):(s.quaternion.copy(i),this.dragging?s.position.copy(this.worldPositionStart):s.position.copy(this.worldPosition),this.axis&&(s.visible=this.axis.search(s.name)!==-1));continue}s.quaternion.copy(i),this.mode==="translate"||this.mode==="scale"?(s.name==="X"&&Math.abs(b.copy(K).applyQuaternion(i).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Y"&&Math.abs(b.copy(X).applyQuaternion(i).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Z"&&Math.abs(b.copy(J).applyQuaternion(i).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XY"&&Math.abs(b.copy(J).applyQuaternion(i).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="YZ"&&Math.abs(b.copy(K).applyQuaternion(i).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XZ"&&Math.abs(b.copy(X).applyQuaternion(i).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1)):this.mode==="rotate"&&(le.copy(i),b.copy(this.eye).applyQuaternion(x.copy(i).invert()),s.name.search("E")!==-1&&s.quaternion.setFromRotationMatrix(Oe.lookAt(this.eye,Ce,X)),s.name==="X"&&(x.setFromAxisAngle(K,Math.atan2(-b.y,b.z)),x.multiplyQuaternions(le,x),s.quaternion.copy(x)),s.name==="Y"&&(x.setFromAxisAngle(X,Math.atan2(b.x,b.z)),x.multiplyQuaternions(le,x),s.quaternion.copy(x)),s.name==="Z"&&(x.setFromAxisAngle(J,Math.atan2(b.y,b.x)),x.multiplyQuaternions(le,x),s.quaternion.copy(x))),s.visible=s.visible&&(s.name.indexOf("X")===-1||this.showX),s.visible=s.visible&&(s.name.indexOf("Y")===-1||this.showY),s.visible=s.visible&&(s.name.indexOf("Z")===-1||this.showZ),s.visible=s.visible&&(s.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),s.material._color=s.material._color||s.material.color.clone(),s.material._opacity=s.material._opacity||s.material.opacity,s.material.color.copy(s.material._color),s.material.opacity=s.material._opacity,this.enabled&&this.axis&&(s.name===this.axis||this.axis.split("").some(function(l){return s.name===l}))&&(s.material.color.setHex(16776960),s.material.opacity=1)}super.updateMatrixWorld(e)}}class ht extends h{constructor(){super(new fe(1e5,1e5,2,2),new V({visible:!1,wireframe:!0,side:_e,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),ce.copy(K).applyQuaternion(t==="local"?this.worldQuaternion:he),U.copy(X).applyQuaternion(t==="local"?this.worldQuaternion:he),W.copy(J).applyQuaternion(t==="local"?this.worldQuaternion:he),b.copy(U),this.mode){case"translate":case"scale":switch(this.axis){case"X":b.copy(this.eye).cross(ce),z.copy(ce).cross(b);break;case"Y":b.copy(this.eye).cross(U),z.copy(U).cross(b);break;case"Z":b.copy(this.eye).cross(W),z.copy(W).cross(b);break;case"XY":z.copy(W);break;case"YZ":z.copy(ce);break;case"XZ":b.copy(W),z.copy(U);break;case"XYZ":case"E":z.set(0,0,0);break}break;case"rotate":default:z.set(0,0,0)}z.length()===0?this.quaternion.copy(this.cameraQuaternion):(ke.lookAt(k.set(0,0,0),z,b),this.quaternion.setFromRotationMatrix(ke)),super.updateMatrixWorld(e)}}class dt{constructor(e,t,i,n=null){this.scene=e,this.camera=t,this.renderer=i,this.viewer=n,this.isCreating=!1,this.previewObject=null,this.currentType="tunnel",this.currentPosition=new p(0,-2,0),this.parameters={tunnel:{width:3,height:3,length:10,orientation:"horizontal",angle:0},road:{width:4,height:.5,length:15,orientation:"horizontal",angle:0},rail:{width:1.5,height:.3,length:20,orientation:"horizontal",angle:0},conveyor:{width:1,height:.8,length:12,orientation:"horizontal",angle:0}},this.createdObjects=new Map,this.nextId=1,this.autoMultiPlace=!1}startCreating(e){this.isCreating=!0,this.currentType=e,this.showCreationUI(),this.createPreview(),console.log(`[MineObjectCreator] Started creating: ${e}`)}stopCreating(){this.isCreating=!1,this.hideCreationUI(),this.removePreview(),console.log("[MineObjectCreator] Stopped creating")}updateParameter(e,t){this.parameters[this.currentType]&&(e==="orientation"?this.parameters[this.currentType][e]=t:this.parameters[this.currentType][e]=parseFloat(t),this.updatePreview(),console.log(`[MineObjectCreator] Updated ${e}: ${t}`))}createPreview(){this.removePreview();const e=this.parameters[this.currentType],t=this.createGeometry(this.currentType,e),i=this.createPreviewMaterial(this.currentType);this.previewObject=new h(t,i),this.previewObject.position.copy(this.currentPosition),this.previewObject.name="preview_object",this.scene.add(this.previewObject)}updatePreview(){if(this.previewObject){const e=this.parameters[this.currentType],t=this.createGeometry(this.currentType,e);this.previewObject.geometry.dispose(),this.previewObject.geometry=t}}removePreview(){this.previewObject&&(this.scene.remove(this.previewObject),this.previewObject.geometry.dispose(),this.previewObject.material.dispose(),this.previewObject=null)}createGeometry(e,t){let i;switch(e){case"tunnel":t.orientation==="vertical"?(i=new O(t.width/2,t.width/2,t.length,16,1,!1),t.angle&&t.angle!==0&&i.rotateY(t.angle*Math.PI/180)):(i=new O(t.height/2,t.height/2,t.length,16,1,!1),t.angle&&t.angle!==0&&i.rotateY(t.angle*Math.PI/180),i.rotateX(Math.PI/2),i.scale(t.width/t.height,1,1));break;case"road":i=new D(t.width,t.height,t.length);break;case"rail":i=new D(t.width,t.height,t.length);break;case"conveyor":i=new D(t.width,t.height,t.length);break;default:i=new D(2,2,2)}return e!=="tunnel"&&t.angle&&t.angle!==0&&(t.orientation==="vertical"?i.rotateY(t.angle*Math.PI/180):i.rotateZ(t.angle*Math.PI/180)),i}createPreviewMaterial(e){const t={tunnel:8421504,road:4210752,rail:6710886,conveyor:16766720};return new F({color:t[e]||8421504,transparent:!0,opacity:.6,wireframe:!1})}finalizeCreation(){var a;if(!this.previewObject)return null;const e=this.parameters[this.currentType],t=this.createGeometry(this.currentType,e),i=this.createFinalMaterial(this.currentType),n=new h(t,i);return n.position.copy(this.previewObject.position),n.userData={id:this.nextId++,type:this.currentType,parameters:{...e},selectable:!0},this.scene.add(n),this.createdObjects.set(n.userData.id,n),this.removePreview(),console.log(`[MineObjectCreator] Created ${this.currentType} with ID: ${n.userData.id}`),this.autoMultiPlace?this.createPreview():(this.isCreating=!1,(a=this.hideCreationUI)==null||a.call(this)),n}createFinalMaterial(e){const t={tunnel:8421504,road:4210752,rail:6710886,conveyor:16766720};return new F({color:t[e]||8421504,transparent:!1,opacity:1})}showCreationUI(){let e=document.getElementById("creation-panel");e||(e=this.createCreationPanel()),e.style.display="block",this.updateUIForType(this.currentType)}hideCreationUI(){const e=document.getElementById("creation-panel");e&&(e.style.display="none")}createCreationPanel(){const e=document.createElement("div");return e.id="creation-panel",e.className="creation-panel",e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 20px;
            border-radius: 10px;
            min-width: 280px;
            z-index: 1000;
            display: none;
            font-family: Arial, sans-serif;
        `,e.innerHTML=`
            <h4 id="creation-title" style="margin-top: 0; color: #fff;">Tünel Oluştur</h4>
            
            <div class="parameter-group" style="margin-bottom: 15px;">
                <label for="param1" style="display: block; margin-bottom: 5px;">
                    Genişlik: <span id="param1-value" style="color: #4CAF50; font-weight: bold;">3</span>m
                </label>
                <input type="range" id="param1" min="1" max="10" step="0.5" value="3" 
                       style="width: 100%; margin-bottom: 5px;">
                <input type="number" id="param1-number" min="1" max="10" step="0.5" value="3"
                       style="width: 100%; padding: 4px; margin-bottom: 10px; background: #333; color: white; border: 1px solid #555; border-radius: 3px;">
                
                <label for="param2" style="display: block; margin-bottom: 5px;">
                    Yükseklik: <span id="param2-value" style="color: #4CAF50; font-weight: bold;">3</span>m
                </label>
                <input type="range" id="param2" min="1" max="8" step="0.5" value="3"
                       style="width: 100%; margin-bottom: 5px;">
                <input type="number" id="param2-number" min="1" max="8" step="0.5" value="3"
                       style="width: 100%; padding: 4px; margin-bottom: 10px; background: #333; color: white; border: 1px solid #555; border-radius: 3px;">
                
                <label for="param3" style="display: block; margin-bottom: 5px;">
                    Uzunluk: <span id="param3-value" style="color: #4CAF50; font-weight: bold;">10</span>m
                </label>
                <input type="range" id="param3" min="5" max="5000" step="1" value="10"
                       style="width: 100%; margin-bottom: 5px;">
                <input type="number" id="param3-number" min="5" max="5000" step="1" value="10"
                       style="width: 100%; padding: 4px; margin-bottom: 15px; background: #333; color: white; border: 1px solid #555; border-radius: 3px;">
            </div>
            
            <div id="tunnel-controls" class="tunnel-specific" style="margin-bottom: 15px; border-top: 1px solid #444; padding-top: 15px;">
                <label for="orientation" style="display: block; margin-bottom: 5px;">
                    Yönelim:
                </label>
                <select id="orientation" style="width: 100%; padding: 5px; margin-bottom: 10px; background: #333; color: white; border: 1px solid #555;">
                    <option value="horizontal">Yatay</option>
                    <option value="vertical">Dikey</option>
                </select>
                
                <label for="angle" style="display: block; margin-bottom: 5px;">
                    Açı: <span id="angle-value" style="color: #4CAF50; font-weight: bold;">0</span>°
                </label>
                <input type="range" id="angle" min="0" max="360" step="5" value="0"
                       style="width: 100%; margin-bottom: 10px;">
            </div>
            
            <div class="button-group" style="margin-top: 15px;">
                <button id="create-confirm" class="btn btn-success" 
                        style="background: #4CAF50; color: white; border: none; padding: 8px 16px; border-radius: 4px; margin-right: 10px; cursor: pointer;">
                    Oluştur
                </button>
                <button id="create-cancel" class="btn btn-secondary"
                        style="background: #666; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer;">
                    İptal
                </button>
            </div>
        `,document.body.appendChild(e),this.setupCreationPanelEvents(),e}setupCreationPanelEvents(){const e=document.getElementById("param1"),t=document.getElementById("param2"),i=document.getElementById("param3"),n=document.getElementById("param1-number"),a=document.getElementById("param2-number"),s=document.getElementById("param3-number"),r=document.getElementById("orientation"),l=document.getElementById("angle"),u=document.getElementById("create-confirm"),o=document.getElementById("create-cancel");e.addEventListener("input",d=>{const c=d.target.value;document.getElementById("param1-value").textContent=c,n.value=c,this.updateParameter("width",c)}),t.addEventListener("input",d=>{const c=d.target.value;document.getElementById("param2-value").textContent=c,a.value=c,this.updateParameter("height",c)}),i.addEventListener("input",d=>{const c=d.target.value;document.getElementById("param3-value").textContent=c,s.value=c,this.updateParameter("length",c)}),n.addEventListener("input",d=>{const c=d.target.value;document.getElementById("param1-value").textContent=c,e.value=c,this.updateParameter("width",c)}),a.addEventListener("input",d=>{const c=d.target.value;document.getElementById("param2-value").textContent=c,t.value=c,this.updateParameter("height",c)}),s.addEventListener("input",d=>{const c=d.target.value;document.getElementById("param3-value").textContent=c,i.value=c,this.updateParameter("length",c)}),r.addEventListener("change",d=>{this.updateParameter("orientation",d.target.value)}),l.addEventListener("input",d=>{document.getElementById("angle-value").textContent=d.target.value,this.updateParameter("angle",d.target.value)}),u.addEventListener("click",()=>{const d=this.finalizeCreation();d&&(this.stopCreating(),this.viewer&&this.viewer.saveObjectToServer(d))}),o.addEventListener("click",()=>{this.stopCreating()})}updateUIForType(e){const t={tunnel:"Tünel Oluştur",road:"Yol Oluştur",rail:"Ray Oluştur",conveyor:"Konveyör Oluştur"};document.getElementById("creation-title").textContent=t[e]||"Obje Oluştur";const i=this.parameters[e];document.getElementById("param1").value=i.width,document.getElementById("param1-value").textContent=i.width,document.getElementById("param1-number").value=i.width,document.getElementById("param2").value=i.height,document.getElementById("param2-value").textContent=i.height,document.getElementById("param2-number").value=i.height,document.getElementById("param3").value=i.length,document.getElementById("param3-value").textContent=i.length,document.getElementById("param3-number").value=i.length;const n=document.getElementById("tunnel-controls");e==="tunnel"?(n.style.display="block",document.getElementById("orientation").value=i.orientation||"horizontal",document.getElementById("angle").value=i.angle||0,document.getElementById("angle-value").textContent=i.angle||0):n.style.display="none"}async saveToServer(e){var t,i,n;try{const a={mine_id:this.mineId||1,name:`${e.userData.type.charAt(0).toUpperCase()+e.userData.type.slice(1)} ${e.userData.id}`,type:"model",geometry:{type:e.userData.type,...e.userData.parameters},material:{color:e.material.color.getHex(),opacity:e.material.opacity||1},position:[e.position.x,e.position.y,e.position.z],rotation:[e.rotation.x,e.rotation.y,e.rotation.z],scale:[e.scale.x,e.scale.y,e.scale.z],properties:{createdAt:new Date().toISOString(),tool:e.userData.type},visible:!0,order:e.userData.id},s=await fetch(`/api/mines/${this.mineId||1}/models`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.getAttribute("content"))||"",Accept:"application/json"},body:JSON.stringify(a)});if(s.ok){const r=await s.json();e.userData.serverId=(i=r.data)==null?void 0:i.id,console.log("[MineObjectCreator] Successfully saved to server:",r)}else throw new Error(`HTTP ${s.status}: ${s.statusText}`)}catch(a){console.error("[MineObjectCreator] Error saving to server:",a),(n=this.showError)==null||n.call(this,"Obje kaydedilemedi: "+a.message)}}showError(e){const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #ff4444;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 10000;
        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{document.body.removeChild(t)},3e3)}}class pt{constructor(e,t,i){this.scene=e,this.camera=t,this.renderer=i,this.isDrawing=!1,this.currentPath=[],this.tempPath=null,this.paths=new Map,this.raycaster=new Z,this.mouse=new te,this.groundPlane=new be(new p(0,1,0),-2),this.tunnelConstraintMode=!1,this.constraintTunnel=null,this.currentDrawingType="tunnel",this.previewMesh=null,this.distanceLabel=null,this.drawingCallbacks={onPathStart:null,onPathUpdate:null,onPathComplete:null},this._lodFrame=0,this.debug=!1}startDrawing(e={}){this.stopDrawing(),this.isDrawing=!0,this.currentPath=[],this.drawingCallbacks={...this.drawingCallbacks,...e},console.log("[MinePathDrawer] Yol çizimi başladı - state temizlendi, type:",this.currentDrawingType)}setDrawingType(e){this.currentDrawingType=e,console.log("[MinePathDrawer] Drawing type set to:",e)}setAxisConstraint(e){this.axisConstraint=e,console.log("[MinePathDrawer] Axis constraint set to:",e)}stopDrawing(){this.isDrawing=!1,this.currentPath=[],this.removeTempPath(),this.removePreviewMesh(),this.removeDistanceLabel(),console.log("[MinePathDrawer] Yol çizimi durdu - temizlik yapıldı")}handleClick(e){if(!this.isDrawing)return;this.updateMousePosition(e);const t=this.getGroundIntersection();t&&(this.currentPath.push(t),this.updateTempPath(),this.drawingCallbacks.onPathUpdate&&this.drawingCallbacks.onPathUpdate(this.currentPath))}handleMouseMove(e){if(!this.isDrawing||this.currentPath.length===0)return;this.updateMousePosition(e);let t=this.getGroundIntersection();if(t){if(this.axisConstraint&&this.currentPath.length>0){const n=this.currentPath[this.currentPath.length-1];switch(this.axisConstraint){case"x":t.y=n.y,t.z=n.z;break;case"y":t.x=n.x,t.z=n.z;break;case"z":t.x=n.x,t.y=n.y;break}}this.viewer.constrainToAxis&&(t=this.viewer.constrainToAxis(t)),this.updatePreview(t);const i=[...this.currentPath,t];this.updateTempPath(i)}}updateMousePosition(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-((e.clientY-t.top)/t.height)*2+1}getGroundIntersection(){this.raycaster.setFromCamera(this.mouse,this.camera);const e=new p;if(this.tunnelConstraintMode&&this.constraintTunnel){const t=this.raycaster.intersectObject(this.constraintTunnel,!0);if(t.length>0){const i=t[0].point;return i.y=-2.5,this.debug&&console.log("[MinePathDrawer] Tunnel constraint intersection found:",{x:i.x.toFixed(2),y:i.y.toFixed(2),z:i.z.toFixed(2)}),i}else return this.debug&&console.log("[MinePathDrawer] No tunnel constraint intersection found"),null}else return this.raycaster.ray.intersectPlane(this.groundPlane,e)?(this.debug&&console.log("[MinePathDrawer] Ground intersection found:",{x:e.x.toFixed(2),y:e.y.toFixed(2),z:e.z.toFixed(2)}),e):(this.debug&&console.log("[MinePathDrawer] No ground intersection found"),null)}updateTempPath(e=null){this.removeTempPath();const t=e||this.currentPath;if(t.length<2)return;const i=new ee().setFromPoints(t),n=new R({color:16711680,linewidth:3,opacity:.8,transparent:!0});this.tempPath=new j(i,n),this.scene.add(this.tempPath)}removeTempPath(){this.tempPath&&(console.log("[MinePathDrawer] Removing temp path"),this.scene.remove(this.tempPath),this.tempPath.geometry.dispose(),this.tempPath.material.dispose(),this.tempPath=null)}completePath(){if(this.currentPath.length<2)return console.log("[MinePathDrawer] Complete path failed: not enough points"),null;console.log("[MinePathDrawer] Completing path with",this.currentPath.length,"points"),this.removeTempPath(),this.drawingCallbacks.onPathComplete&&this.drawingCallbacks.onPathComplete(this.currentPath);const e=[...this.currentPath];return this.currentPath=[],e}createPath(e){const{id:t,points:i,width:n=2.5,height:a=2.5,color:s="#808080",type:r="tunnel"}=e;if(!i||i.length<2)return null;const l=this.createPathMesh(i,n,a,s,r);return l.userData={id:t,type:r,pathData:e},this.paths.set(t,l),this.scene.add(l),console.log(`[MinePathDrawer] Yol oluşturuldu: ${t}, boyutlar: ${n}x${a}`),l}createPathMesh(e,t,i,n,a){const s=new je,r=this.createTubeGeometry(e,t,i),l=this.createPathMaterial(n,a),u=new h(r,l);u.castShadow=!0,u.receiveShadow=!0;const o=this.createTubeGeometry(e,t,i,{quality:"low"});u.userData.highGeometry=r,u.userData.lowGeometry=o,u.userData.lodState="high",s.add(u);const d=new ze(r),c=new R({color:new we(n).multiplyScalar(.5),opacity:.6,transparent:!0,linewidth:1}),y=new Ae(d,c);return s.add(y),a==="conveyor"?this.addConveyorBelt(s,e,t):a==="rail"&&this.addRailTracks(s,e,t),s}createPathMaterial(e,t){const i=new we(e);switch(t){case"tunnel":return new F({color:i,transparent:!0,opacity:.9,shininess:30,specular:4473924});case"road":return new de({color:i.multiplyScalar(.7),transparent:!0,opacity:.95});case"rail":return new F({color:i,metalness:.7,roughness:.3,transparent:!0,opacity:.9});case"conveyor":return new F({color:i,transparent:!0,opacity:.8,shininess:50,specular:8947848});default:return new de({color:i,transparent:!0,opacity:.9})}}createTubeGeometry(e,t,i,n={}){if(e.length<2)return new D(1,1,1);const a=new Q(e);a.tension=.2;const s=Math.max(e.length*6,24);let r=s;n.quality==="low"&&(r=Math.max(Math.floor(s*.35),8)),r=Math.min(r,360);const l=n.quality==="low"?8:16,u=new $(a,r,Math.max(t,i)/2,l,!1),o=u.attributes.position.array;for(let d=0;d<o.length;d+=3){const c=o[d],y=o[d+1],f=o[d+2];if(Math.sqrt(c*c+f*f)>0){const P=Math.atan2(f,c),w=t*i/Math.sqrt((i*Math.cos(P))**2+(t*Math.sin(P))**2)/(Math.max(t,i)/2);o[d]=c*w,o[d+2]=f*w,y<0&&(o[d+1]=y*.8)}}return u.attributes.position.needsUpdate=!0,u.computeVertexNormals(),u}updateLOD(){if(this._lodFrame++,this._lodFrame%10===0)for(const[,e]of this.paths){if(!e)continue;const t=e.children.find(s=>s.isMesh);if(!t||!t.userData.highGeometry)continue;t.userData._bs||(t.userData.highGeometry.computeBoundingSphere(),t.userData._bs=t.userData.highGeometry.boundingSphere.clone());const i=t.userData._bs.center.clone();e.localToWorld(i);const a=i.distanceTo(this.camera.position)>180?"low":"high";a!==t.userData.lodState&&(a==="low"?(t.geometry=t.userData.lowGeometry,t.userData.lodState="low"):(t.geometry=t.userData.highGeometry,t.userData.lodState="high"))}}addConveyorBelt(e,t,i){const n=new Q(t),a=new $(n,t.length*2,i/3,8,!1),s=new F({color:3355443,shininess:100,transparent:!0,opacity:.8}),r=new h(a,s);r.position.y+=.1,e.add(r)}addRailTracks(e,t,i){const n=new Q(t),a=new $(n,t.length*4,.05,6,!1),s=new F({color:6710886,metalness:.8,roughness:.2}),r=new h(a,s.clone());r.position.x-=i/3,r.position.y+=.05,e.add(r);const l=new h(a.clone(),s.clone());l.position.x+=i/3,l.position.y+=.05,e.add(l)}removePath(e){const t=this.paths.get(e);t&&(this.scene.remove(t),t.traverse(i=>{i.geometry&&i.geometry.dispose(),i.material&&(Array.isArray(i.material)?i.material.forEach(n=>n.dispose()):i.material.dispose())}),this.paths.delete(e),console.log(`[MinePathDrawer] Yol silindi: ${e}`))}clearAllPaths(){for(const[e,t]of this.paths)this.removePath(e);console.log("[MinePathDrawer] Tüm yollar silindi")}getPath(e){return this.paths.get(e)}getAllPaths(){return Array.from(this.paths.values())}calculatePathLength(e){if(!e||e.length<2)return 0;let t=0;for(let i=1;i<e.length;i++){const n=e[i-1],a=e[i],s=a.x-n.x,r=a.y-n.y,l=a.z-n.z;t+=Math.sqrt(s*s+r*r+l*l)}return t}enableTunnelConstraint(e){this.tunnelConstraintMode=!0,this.constraintTunnel=e,console.log("[MinePathDrawer] Tunnel constraint mode enabled")}disableTunnelConstraint(){this.tunnelConstraintMode=!1,this.constraintTunnel=null,console.log("[MinePathDrawer] Tunnel constraint mode disabled")}updatePreview(e){if(!this.isDrawing||this.currentPath.length===0)return;const t=[...this.currentPath,e];this.createPreviewMesh(t),this.updateDistanceLabel(e)}createPreviewMesh(e){if(this.removePreviewMesh(),e.length<2)return;let t,i;switch(this.currentDrawingType){case"tunnel":t=this.createTubeGeometry(e,2.5,2.5),i=new V({color:6710886,transparent:!0,opacity:.3,wireframe:!0});break;case"road":t=this.createRoadGeometry(e,3),i=new V({color:3355443,transparent:!0,opacity:.4});break;case"rail":t=this.createRailGeometry(e,1.5),i=new V({color:6710886,transparent:!0,opacity:.5});break;case"conveyor":t=this.createConveyorGeometry(e,1),i=new V({color:4473924,transparent:!0,opacity:.4});break;default:t=new ee().setFromPoints(e),i=new R({color:16711680,transparent:!0,opacity:.7})}this.currentDrawingType==="tunnel"||this.currentDrawingType==="road"||this.currentDrawingType==="rail"||this.currentDrawingType==="conveyor"?this.previewMesh=new h(t,i):this.previewMesh=new j(t,i),this.scene.add(this.previewMesh)}removePreviewMesh(){this.previewMesh&&(this.scene.remove(this.previewMesh),this.previewMesh.geometry&&this.previewMesh.geometry.dispose(),this.previewMesh.material&&this.previewMesh.material.dispose(),this.previewMesh=null)}updateDistanceLabel(e){if(this.currentPath.length===0)return;const i=this.currentPath[this.currentPath.length-1].distanceTo(e);this.updateDistanceDisplay(i)}updateDistanceDisplay(e){const t=document.getElementById("distance-display"),i=document.getElementById("distance-value");t&&i&&(t.style.display="block",i.textContent=`${e.toFixed(1)}m`)}removeDistanceLabel(){const e=document.getElementById("distance-display");e&&(e.style.display="none")}createRoadGeometry(e,t){const i=new Q(e);return new $(i,e.length*2,t/2,8,!1)}createRailGeometry(e,t){const i=new Q(e);return new $(i,e.length*2,.1,6,!1)}createConveyorGeometry(e,t){const i=new Q(e);return new $(i,e.length*2,t/2,6,!1)}}class ut{constructor(e,t,i,n){this.scene=e,this.camera=t,this.renderer=i,this.pathDrawer=n,this.raycaster=new Z,this.mouse=new te,this.isEditing=!1,this.activePath=null,this.handles=[],this.draggingHandle=null,this.dragPlane=new be(new p(0,1,0),0),this.offset=new p,this.intersection=new p,this.callbacks={onPointChange:null,onEditStart:null,onEditEnd:null},this.undoStack=[],this.redoStack=[],this.maxHistory=50}setCallbacks(e){this.callbacks={...this.callbacks,...e}}startEditing(e){if(!e||!e.userData||!e.userData.pathData)return;this.stopEditing(),this.isEditing=!0,this.activePath=e;const t=e.userData.pathData,i=(t.points||t.path_points||[]).map(a=>({...a}));this.undoStack=[i],this.redoStack=[],this.buildHandles(),this.callbacks.onEditStart&&this.callbacks.onEditStart(e);const n=document.getElementById("save-path-btn");n&&(n.disabled=!1)}stopEditing(){this.clearHandles(),this.isEditing=!1,this.activePath=null,this.draggingHandle=null,this.callbacks.onEditEnd&&this.callbacks.onEditEnd();const e=document.getElementById("save-path-btn");e&&(e.disabled=!0)}buildHandles(){this.clearHandles();const e=this.activePath.userData.pathData,t=e.points||e.path_points||[],i=new Te(.6,12,12),n=new V({color:16763904});t.forEach((a,s)=>{const r=new h(i.clone(),n.clone());r.position.set(a.x,a.y,a.z),r.userData.isPathHandle=!0,r.userData.pointIndex=s,this.scene.add(r),this.handles.push({mesh:r,index:s})})}clearHandles(){this.handles.forEach(e=>{this.scene.remove(e.mesh),e.mesh.geometry.dispose(),e.mesh.material.dispose()}),this.handles=[]}updateMouse(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-((e.clientY-t.top)/t.height)*2+1}pointerDown(e){if(!this.isEditing)return;this.updateMouse(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=this.raycaster.intersectObjects(this.handles.map(i=>i.mesh),!0);if(t.length>0){const i=t[0].object;this.draggingHandle=this.handles.find(n=>n.mesh===i),this.dragPlane.set(new p(0,1,0),-i.position.y)}}pointerMove(e){if(!this.isEditing||!this.draggingHandle)return;this.updateMouse(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=new p;if(this.raycaster.ray.intersectPlane(this.dragPlane,t)){const i=this.draggingHandle;t.y=-2.5,i.mesh.position.copy(t),this.applyHandlePosition(i.index,t,{skipHistory:!0,skipDirty:!0})}}pointerUp(){var e;if(this.isEditing){if(this.draggingHandle){const t=(e=this.activePath)==null?void 0:e.userData.pathData;t&&t.points&&(this.pushHistory(t.points),this.viewer&&this.viewer.markPathDirty(t.id||t.path_id||this.activePath.userData.id))}this.draggingHandle=null}}applyHandlePosition(e,t,i={}){if(!this.activePath)return;const n=this.activePath.userData.pathData,a=n.points||n.path_points||[];if(!a[e])return;a[e]={x:t.x,y:t.y,z:t.z};const s=this.viewer&&this.viewer.pathSimplifyMultiplier?this.viewer.pathSimplifyMultiplier:1,r=gt(a,s),l=mt(a,r);this.rebuildPath(l,n),this.callbacks.onPointChange&&this.callbacks.onPointChange(l,n),i.skipHistory||this.pushHistory(l),!i.skipDirty&&this.viewer&&this.viewer.markPathDirty(n.id||n.path_id||this.activePath.userData.id)}pushHistory(e){const t=e.map(n=>({...n})),i=this.undoStack[this.undoStack.length-1];i&&i.length===t.length&&i.every((n,a)=>n.x===t[a].x&&n.y===t[a].y&&n.z===t[a].z)||(this.undoStack.push(t),this.undoStack.length>this.maxHistory&&this.undoStack.shift(),this.redoStack=[])}undo(){if(this.undoStack.length<=1)return;const e=this.undoStack.pop();this.redoStack.push(e);const t=this.undoStack[this.undoStack.length-1];this.applyHistoryState(t)}redo(){if(this.redoStack.length===0)return;const e=this.redoStack.pop();this.undoStack.push(e),this.applyHistoryState(e)}applyHistoryState(e){if(!this.activePath)return;const t=this.activePath.userData.pathData;this.rebuildPath(e,t),this.callbacks.onPointChange&&this.callbacks.onPointChange(e,t),this.clearHandles(),this.buildHandles()}rebuildPath(e,t){const i=this.activePath;[...i.children].forEach(o=>{i.remove(o),o.geometry&&o.geometry.dispose(),o.userData&&(o.userData.lowGeometry&&o.userData.lowGeometry!==o.geometry&&(o.userData.lowGeometry.dispose(),o.userData.lowGeometry=null),o.userData.highGeometry&&o.userData.highGeometry!==o.geometry&&(o.userData.highGeometry!==o.geometry&&o.userData.highGeometry.dispose(),o.userData.highGeometry=null)),o.material&&(Array.isArray(o.material)?o.material.forEach(d=>d.dispose()):o.material.dispose())});const a=t.width||2.5,s=t.height||2.5,r=t.color||"#808080",l=t.type||"tunnel";this.pathDrawer.createPathMesh(e.map(o=>new p(o.x,o.y,o.z)),a,s,r,l).children.forEach(o=>i.add(o)),t.points=e,t.path_points=e,this.clearHandles(),this.buildHandles(),i.traverse(o=>{o.userData&&o.userData._bs&&(o.userData._bs=null)})}}function mt(m,e){if(!m||m.length<3)return m;const t=e*e;function i(s,r,l){let u=r.x,o=r.y,d=r.z,c=l.x-u,y=l.y-o,f=l.z-d;if(c!==0||y!==0||f!==0){let M=((s.x-u)*c+(s.y-o)*y+(s.z-d)*f)/(c*c+y*y+f*f);M>1?(u=l.x,o=l.y,d=l.z):M>0&&(u+=c*M,o+=y*M,d+=f*M)}return c=s.x-u,y=s.y-o,f=s.z-d,c*c+y*y+f*f}function n(s,r,l,u,o){let d=u,c=-1;for(let y=r+1;y<l;y++){const f=i(s[y],s[r],s[l]);f>d&&(c=y,d=f)}d>u&&c!==-1&&(c-r>1&&n(s,r,c,u,o),o.push(s[c]),l-c>1&&n(s,c,l,u,o))}const a=[m[0]];return n(m,0,m.length-1,t,a),a.push(m[m.length-1]),a}function gt(m,e=1){if(!m||m.length<3)return .05*e;let t=0;for(let o=1;o<m.length;o++){const d=m[o].x-m[o-1].x,c=m[o].y-m[o-1].y,y=m[o].z-m[o-1].z;t+=Math.sqrt(d*d+c*c+y*y)}let i=0,n=0;for(let o=1;o<m.length-1;o++){const d=m[o-1],c=m[o],y=m[o+1],f=c.x-d.x,M=c.y-d.y,P=c.z-d.z,C=y.x-c.x,w=y.y-c.y,g=y.z-c.z,E=Math.sqrt(f*f+M*M+P*P)+1e-6,v=Math.sqrt(C*C+w*w+g*g)+1e-6,S=(f*C+M*w+P*g)/(E*v),L=Math.acos(Math.min(1,Math.max(-1,S)));i+=L,n++}const a=n?i/n:0,s=Math.min(1,t/500),r=1-Math.min(1,a/.8),u=(.05+.4*s*r)*e;return Math.min(1,Math.max(.02,u))}class yt{constructor(e,t,i){this.scene=e,this.camera=t,this.renderer=i,this.raycaster=new Z,this.mouse=new te,this.selectedObject=null,this.multiSelect=!0,this.selectedObjects=new Set,this.selectableObjects=new Set,this.highlightMaterial=new V({color:16729156,transparent:!0,opacity:.3,depthTest:!1}),this.outlineColor=16711680,this.xrayModeObject=null,this.originalMaterials=new Map,this.callbacks={onObjectSelect:null,onObjectDeselect:null,onObjectDelete:null}}setCallbacks(e){this.callbacks={...this.callbacks,...e}}addSelectableObject(e,t={}){e.userData.selectable=!0,e.userData.objectData=t,this.selectableObjects.add(e)}removeSelectableObject(e){this.selectableObjects.delete(e),this.selectedObject===e&&this.deselectObject()}handleClick(e){this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=Array.from(this.selectableObjects),i=this.raycaster.intersectObjects(t,!0);if(i.length>0){let n=null;for(const a of i){let s=a.object;for(;s&&!s.userData.selectable;)s=s.parent;if(s&&this.selectableObjects.has(s)){n=s;break}}if(n){const a=e.shiftKey;this.multiSelect&&a?this.selectedObjects.has(n)?this.deselectObject(n):this.addToSelection(n):(this.clearMultiSelection(),this.selectObject(n))}}else this.clearMultiSelection(),this.deselectObject()}updateMousePosition(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-((e.clientY-t.top)/t.height)*2+1}selectObject(e){if(this.selectedObject===e){e.userData.objectData&&e.userData.objectData.pathType==="tunnel"&&this.toggleXRayMode(e);return}this.deselectObject(),this.selectedObject=e,this.selectedObjects.add(e),this.addHighlight(e),e.userData.objectData&&e.userData.objectData.pathType==="tunnel"&&this.enableXRayMode(e),this.callbacks.onObjectSelect&&this.callbacks.onObjectSelect(e,e.userData.objectData)}deselectObject(){this.selectedObject&&(this.removeHighlight(this.selectedObject),this.disableXRayMode(),this.callbacks.onObjectDeselect&&this.callbacks.onObjectDeselect(this.selectedObject),this.selectedObject=null)}deleteSelectedObject(){if(this.selectedObject){const e=this.selectedObject;this.deselectObject(),this.callbacks.onObjectDelete&&this.callbacks.onObjectDelete(e)}}addHighlight(e){e.traverse(t=>{if(t.isMesh&&t.geometry){const i=new ze(t.geometry),n=new Ae(i,new R({color:this.outlineColor,linewidth:3}));n.name="highlight_outline",t.add(n)}})}removeHighlight(e){e.traverse(t=>{const i=t.getObjectByName("highlight_outline");i&&(t.remove(i),i.geometry.dispose(),i.material.dispose())})}deselectObject(e=null){if(e){this.removeHighlight(e),this.xrayModeObject===e&&this.disableXRayMode(),this.selectedObjects.delete(e),this.selectedObject===e&&(this.selectedObject=null),this.callbacks.onObjectDeselect&&this.callbacks.onObjectDeselect(e);return}this.selectedObject&&(this.removeHighlight(this.selectedObject),this.xrayModeObject===this.selectedObject&&this.disableXRayMode(),this.callbacks.onObjectDeselect&&this.callbacks.onObjectDeselect(this.selectedObject)),this.selectedObject=null,this.selectedObjects.clear()}addToSelection(e){this.selectedObjects.has(e)||(this.selectedObjects.add(e),this.addHighlight(e),this.callbacks.onObjectSelect&&this.callbacks.onObjectSelect(e,e.userData.objectData))}clearMultiSelection(){if(this.selectedObjects.size>1){for(const e of this.selectedObjects)e!==this.selectedObject&&this.removeHighlight(e);this.selectedObjects=this.selectedObject?new Set([this.selectedObject]):new Set}}enableXRayMode(e){this.xrayModeObject!==e&&(this.disableXRayMode(),this.xrayModeObject=e,e.traverse(t=>{if(t.isMesh){this.originalMaterials.set(t,t.material.clone());const i=t.material.clone();i.transparent=!0,i.opacity=.3,i.side=_e,t.material=i}}),console.log("[ObjectSelector] X-Ray mode enabled for tunnel"))}disableXRayMode(){this.xrayModeObject&&(this.xrayModeObject.traverse(e=>{e.isMesh&&this.originalMaterials.has(e)&&(e.material.dispose(),e.material=this.originalMaterials.get(e),this.originalMaterials.delete(e))}),this.xrayModeObject=null,console.log("[ObjectSelector] X-Ray mode disabled"))}toggleXRayMode(e){this.xrayModeObject===e?this.disableXRayMode():this.enableXRayMode(e)}}class ft{constructor(e,t){if(console.log("%c[SimpleMine3DViewer] Constructor called","color: blue; font-weight: bold;"),console.log("[SimpleMine3DViewer] Parameters:",{containerId:e,mineId:t}),this.containerId=e,this.mineId=t,this.container=document.getElementById(e),console.log("[SimpleMine3DViewer] Container element:",this.container),!this.container){const i=`Container with id "${e}" not found`;throw console.error("[SimpleMine3DViewer]",i),new Error(i)}console.log("[SimpleMine3DViewer] THREE.js (ESM) version:",Xe),this.scene=null,this.camera=null,this.renderer=null,this.controls=null,this.pathDrawer=null,this.pathEditor=null,this.objectCreator=null,this.transformControls=null,this.isPathDrawingMode=!1,this.isCreatingMode=!1,this.selectedObject=null,this.objectSelector=null,console.log("[SimpleMine3DViewer] Starting initialization..."),this._dirtyPaths=new Set,this._dirtyIndicatorEl=null,this.measurementsEnabled=!0,this._lastMeasuredTunnel=null,this.init()}async init(){try{console.log("%c[SimpleMine3DViewer] Initializing 3D system...","color: green; font-weight: bold;");const e=document.getElementById("loading-container");e&&(e.style.opacity="0",e.style.pointerEvents="none",e.style.transition="opacity .3s",setTimeout(()=>{e&&(e.style.display="none")},350)),this.container.style.display="block",console.log("[SimpleMine3DViewer] Container dimensions:",{clientWidth:this.container.clientWidth,clientHeight:this.container.clientHeight,offsetWidth:this.container.offsetWidth,offsetHeight:this.container.offsetHeight}),(this.container.clientWidth===0||this.container.clientHeight===0)&&console.warn("[SimpleMine3DViewer] Container has zero dimensions, using default sizes"),console.log("[SimpleMine3DViewer] Creating scene..."),this.scene=new Fe,this.scene.background=new we(8900331),console.log("[SimpleMine3DViewer] Scene created:",this.scene),console.log("[SimpleMine3DViewer] Creating camera...");const t=this.container.clientWidth/this.container.clientHeight||16/9;this.camera=new Re(60,t,.1,500),this.camera.position.set(15,5,25),this.camera.lookAt(0,-2,0),console.log("[SimpleMine3DViewer] Camera created:",{fov:this.camera.fov,aspect:this.camera.aspect,position:this.camera.position,near:this.camera.near,far:this.camera.far}),console.log("[SimpleMine3DViewer] Creating renderer..."),this.renderer=new qe({antialias:!0,alpha:!0,powerPreference:"high-performance"});const i=this.container.clientWidth||800,n=this.container.clientHeight||600;this.renderer.setSize(i,n),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.shadowMap.enabled=!1,this.renderer.toneMapping=Qe,this.renderer.toneMappingExposure=1.2,this.renderer.outputColorSpace=$e,this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.renderer.domElement.style.display="block",this.renderer.domElement.style.position="relative",console.log("[SimpleMine3DViewer] Renderer created:",{width:i,height:n,shadowMap:this.renderer.shadowMap.enabled,toneMapping:this.renderer.toneMapping,domElement:this.renderer.domElement}),console.log("[SimpleMine3DViewer] Appending renderer to container..."),this.container.appendChild(this.renderer.domElement),console.log("[SimpleMine3DViewer] Renderer appended successfully"),console.log("[SimpleMine3DViewer] Adding lights..."),this.addLights(),console.log("[SimpleMine3DViewer] Adding test geometry..."),this.addTestGeometry(),console.log("[SimpleMine3DViewer] Setting up controls..."),this.controls=new Ze(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.05,this.controls.enableZoom=!0,this.controls.enablePan=!0,this.controls.enableRotate=!0,this.controls.rotateSpeed=4,this.controls.zoomSpeed=5,this.controls.panSpeed=4.5,this.controls.minDistance=1,this.controls.maxDistance=1e3,this.controls.zoomToCursor=!0,this.controls.maxPolarAngle=Math.PI*.9,this.controls.minPolarAngle=Math.PI*.1,this.controls.maxAzimuthAngle=1/0,this.controls.minAzimuthAngle=-1/0,this.controls.autoRotate=!1,this.controls.autoRotateSpeed=1,this.controls.enableKeys=!0,this.controls.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.controls.mouseButtons={LEFT:ue.ROTATE,MIDDLE:ue.DOLLY,RIGHT:ue.PAN},this.controls.touches={ONE:Me.ROTATE,TWO:Me.DOLLY_PAN},this.controls.target.set(0,-3,0),this.controls.update(),console.log("[SimpleMine3DViewer] OrbitControls initialized with enhanced settings:",this.controls),console.log("[SimpleMine3DViewer] Initializing path drawer..."),this.pathDrawer=new pt(this.scene,this.camera,this.renderer),this.setupPathDrawingEvents(),this.pathEditor=new ut(this.scene,this.camera,this.renderer,this.pathDrawer),this.pathEditor.setCallbacks({onPointChange:(s,r)=>{this.markPathDirty(r.id||r.pathId)}}),console.log("[SimpleMine3DViewer] Initializing object creator..."),this.objectCreator=new dt(this.scene,this.camera,this.renderer,this),console.log("[SimpleMine3DViewer] Initializing transform controls..."),this.transformControls=new nt(this.camera,this.renderer.domElement),this.transformControls.addEventListener("change",()=>this.renderer.render(this.scene,this.camera)),this.transformControls.addEventListener("dragging-changed",s=>{this.controls.enabled=!s.value}),this.scene.add(this.transformControls),setTimeout(()=>{this.setupMiningControls()},100),console.log("[SimpleMine3DViewer] Initializing object selector..."),this.objectSelector=new yt(this.scene,this.camera,this.renderer),this.setupObjectSelection(),this.renderer.domElement.addEventListener("pointerdown",s=>{this.pathEditor&&this.pathEditor.isEditing&&this.pathEditor.pointerDown(s)}),this.renderer.domElement.addEventListener("pointermove",s=>{this.pathEditor&&this.pathEditor.isEditing&&this.pathEditor.pointerMove(s)}),this.renderer.domElement.addEventListener("pointerup",s=>{this.pathEditor&&this.pathEditor.isEditing&&this.pathEditor.pointerUp(s)}),console.log("[SimpleMine3DViewer] Loading mine data..."),await this.loadMineData(),console.log("[SimpleMine3DViewer] Starting render loop..."),this.animate(),console.log("%c[SimpleMine3DViewer] Initialization completed successfully!","color: green; font-weight: bold; font-size: 14px;");const a=document.getElementById("loading-container");a&&a.style.display!=="none"&&(console.log("[SimpleMine3DViewer] Forcing loading container hide at end"),a.remove())}catch(e){throw console.error("%c[SimpleMine3DViewer] Initialization failed:","color: red; font-weight: bold;",{message:e.message,stack:e.stack,name:e.name}),e}}addLights(){console.log("[SimpleMine3DViewer] Adding shadowless lights to scene...");const e=new Ne(4210752,.6);this.scene.add(e),console.log("[SimpleMine3DViewer] Ambient light added:",e);const t=new Ue(16777215,.9);t.position.set(50,50,50),t.castShadow=!1,this.scene.add(t),console.log("[SimpleMine3DViewer] Directional light added (shadowless):",t);const i=new We(8900331,9127187,.5);i.position.set(0,20,0),this.scene.add(i),console.log("[SimpleMine3DViewer] Hemisphere light added:",i),[{pos:[10,2,10],color:16768324,intensity:.4},{pos:[-10,2,10],color:16768324,intensity:.4},{pos:[10,2,-10],color:16768324,intensity:.4},{pos:[-10,2,-10],color:16768324,intensity:.4}].forEach((a,s)=>{const r=new Ke(a.color,a.intensity,25);r.position.set(...a.pos),r.castShadow=!1,this.scene.add(r)}),console.log("[SimpleMine3DViewer] Mining lights added successfully")}setupMiningControls(){console.log("[SimpleMine3DViewer] Setting up mining controls...");const e=document.querySelectorAll(".mining-tool-btn");console.log("[SimpleMine3DViewer] Found tool buttons:",e.length,e),e.forEach(l=>{const u=l.getAttribute("data-tool");console.log("[SimpleMine3DViewer] Setting up button for tool:",u),l.addEventListener("click",o=>{o.preventDefault(),console.log(`🛠️ Mining tool butonuna tıklandı: ${u}`),this.startMiningTool(u)})});const t=document.getElementById("axis-x-btn"),i=document.getElementById("axis-y-btn"),n=document.getElementById("axis-z-btn"),a=document.getElementById("free-draw-btn");t&&t.addEventListener("click",()=>this.setDrawingConstraint("x")),i&&i.addEventListener("click",()=>this.setDrawingConstraint("y")),n&&n.addEventListener("click",()=>this.setDrawingConstraint("z")),a&&a.addEventListener("click",()=>this.setDrawingConstraint("free"));const s=document.getElementById("reset-camera-btn"),r=document.getElementById("toggle-grid-btn");s&&s.addEventListener("click",()=>{this.camera.position.set(15,5,25),this.camera.lookAt(0,-2,0),this.controls.target.set(0,-3,0),this.controls.update()}),r&&r.addEventListener("click",()=>{const l=this.scene.getObjectByName("grid_helper");l&&(l.visible=!l.visible)}),console.log("[SimpleMine3DViewer] Mining controls setup completed")}startMiningTool(e){console.log("🚀 [SimpleMine3DViewer] Starting mining tool:",e),this.isPathDrawingMode&&(console.log("🛑 Mevcut çizim modu durduruluyor..."),this.stopPathDrawing()),this.isCreatingMode&&(console.log("� Mevcut oluşturma modu durduruluyor..."),this.stopCreating()),console.log("🔧 Object creation mode başlatılıyor:",e),this.isCreatingMode=!0,this.controls.enabled=!1,this.objectCreator.startCreating(e),console.log("� Button states güncelleniyor..."),this.updateToolButtonStates(e),console.log("🎉 Mining tool başlatma işlemi tamamlandı:",e)}stopCreating(){this.isCreatingMode&&(this.isCreatingMode=!1,this.controls.enabled=!0,this.objectCreator.stopCreating(),this.updateToolButtonStates(null),console.log("[SimpleMine3DViewer] Creating mode stopped"))}updateToolIndicator(e){const t=document.getElementById("tool-indicator"),i=document.getElementById("tool-name");if(t&&i){const a={tunnel:{icon:"fas fa-mountain",name:"Tünel Kazma"},road:{icon:"fas fa-road",name:"Yol İnşaası"},rail:{icon:"fas fa-train",name:"Ray Döşeme"},conveyor:{icon:"fas fa-conveyor-belt",name:"Konveyör Kurma"}}[e]||{icon:"fas fa-tools",name:"Bilinmeyen Araç"};t.querySelector("i").className=a.icon+" me-2",i.textContent=a.name,t.style.display="block"}}updateToolButtonStates(e){document.querySelectorAll(".mining-tool-btn").forEach(i=>{const n=i.getAttribute("data-tool");n===e?(i.classList.remove("btn-outline-warning","btn-outline-info","btn-outline-success","btn-outline-danger"),i.classList.add("btn-warning")):(i.classList.remove("btn-warning","btn-info","btn-success","btn-danger"),i.classList.add(`btn-outline-${this.getToolColor(n)}`))})}getToolColor(e){return{tunnel:"warning",road:"info",rail:"success",conveyor:"danger"}[e]||"secondary"}setDrawingConstraint(e){console.log("[SimpleMine3DViewer] Setting drawing constraint to:",e),this.activeConstraint=e,document.querySelectorAll("#axis-x-btn, #axis-y-btn, #axis-z-btn, #free-draw-btn").forEach(n=>{n.classList.remove("btn-light","btn-outline-light"),n.classList.add("btn-outline-light")});let i=null;switch(e){case"x":i=document.getElementById("axis-x-btn");break;case"y":i=document.getElementById("axis-y-btn");break;case"z":i=document.getElementById("axis-z-btn");break;case"free":i=document.getElementById("free-draw-btn");break}i&&(i.classList.remove("btn-outline-light"),i.classList.add("btn-light")),this.pathDrawer&&this.pathDrawer.setAxisConstraint(e),console.log("[SimpleMine3DViewer] Constraint set to:",e)}addTestGeometry(){console.log("[SimpleMine3DViewer] Adding test geometry...");try{console.log("[SimpleMine3DViewer] Creating infinite ground plane...");const e=2e4,t=new fe(e,e,50,50),i=new de({color:5668166,transparent:!1}),n=new h(t,i);n.rotation.x=-Math.PI/2,n.position.y=-5,n.receiveShadow=!0,n.name="ground_plane",this.scene.add(n),console.log("[SimpleMine3DViewer] Infinite ground plane added:",n);const a=new Je(e,100,8947848,4473924);a.position.y=-4.9,a.material.opacity=.3,a.material.transparent=!0,this.scene.add(a);const s=new fe(e,e),r=new de({color:9127187,transparent:!0,opacity:.8}),l=new h(s,r);l.rotation.x=-Math.PI/2,l.position.y=-10,l.receiveShadow=!0,l.name="underground_layer",this.scene.add(l),console.log("[SimpleMine3DViewer] Test geometry added successfully"),console.log("[SimpleMine3DViewer] Scene children count:",this.scene.children.length)}catch(e){throw console.error("[SimpleMine3DViewer] Error adding test geometry:",e),e}}async loadMineData(){console.log("[SimpleMine3DViewer] Loading mine data for mine ID:",this.mineId);try{const e=`/api/mines/${this.mineId}/scene-data`;console.log("[SimpleMine3DViewer] Fetching from URL:",e);const t=await fetch(e);if(console.log("[SimpleMine3DViewer] Fetch response:",{ok:t.ok,status:t.status,statusText:t.statusText,headers:Object.fromEntries(t.headers.entries())}),!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const i=await t.json();console.log("[SimpleMine3DViewer] Mine data loaded successfully:",i),i&&i.models&&console.log("[SimpleMine3DViewer] Processing",i.models.length,"models"),i&&i.layers&&console.log("[SimpleMine3DViewer] Processing",i.layers.length,"layers"),i&&i.paths&&(console.log("[SimpleMine3DViewer] Processing",i.paths.length,"paths"),this.loadPaths(i.paths))}catch(e){console.warn("[SimpleMine3DViewer] Could not load mine data:",{message:e.message,stack:e.stack}),console.log("[SimpleMine3DViewer] Continuing with test geometry only")}}loadPaths(e){console.log("[SimpleMine3DViewer] Loading paths:",e),e.forEach(t=>{if(t.path_points&&t.path_points.length>1){const i=t.path_points.map(a=>new p(a.x,a.y,a.z)),n=this.pathDrawer.createPath({id:t.id,points:i,width:t.width||3,height:t.height||3,color:t.color||"#808080",type:t.type||"tunnel"});n&&this.objectSelector&&this.objectSelector.addSelectableObject(n,{id:t.id,type:"path",name:t.name,pathType:t.type,width:t.width,height:t.height,color:t.color,material:t.material,points:t.path_points,length:this.pathDrawer.calculatePathLength(t.path_points)})}})}animate(){const e=performance.now();requestAnimationFrame(()=>this.animate());try{if(this.controls&&this.controls.update(),this.pathDrawer&&this.pathDrawer.updateLOD(),this._measurementGroup&&this.camera){const n=this.camera.quaternion;this._measurementGroup.traverse(a=>{a.isSprite&&a.quaternion.copy(n)})}this.renderer&&this.scene&&this.camera?this.renderer.render(this.scene,this.camera):console.error("[SimpleMine3DViewer] Missing components for rendering:",{renderer:!!this.renderer,scene:!!this.scene,camera:!!this.camera})}catch(n){console.error("[SimpleMine3DViewer] Render error:",n)}const i=performance.now()-e;this.frameCount||(this.frameCount=0),this.frameCount++,this.frameCount%60===0&&console.log(`[SimpleMine3DViewer] Performance - Frame ${this.frameCount}, Frame time: ${i.toFixed(2)}ms`)}destroy(){this.renderer&&(this.container.removeChild(this.renderer.domElement),this.renderer.dispose())}setupPathDrawingEvents(){const e=this.renderer.domElement;this.boundHandlers={click:t=>this.handleCanvasClick(t),mousemove:t=>this.handleCanvasMouseMove(t),keydown:t=>this.handleKeyDown(t)},e.addEventListener("click",this.boundHandlers.click),e.addEventListener("mousemove",this.boundHandlers.mousemove),document.addEventListener("keydown",this.boundHandlers.keydown)}handleCanvasClick(e){e.preventDefault(),e.stopPropagation(),this.isPathDrawingMode?this.pathDrawer.handleClick(e):this.isCreatingMode?this.updateCreationPosition(e):(this.handleObjectSelection(e),!this.selectedObject&&this.objectCreator&&this.objectCreator.previewObject&&this.objectCreator.removePreview())}updateCreationPosition(e){const t=this.renderer.domElement.getBoundingClientRect(),i=new te;i.x=(e.clientX-t.left)/t.width*2-1,i.y=-((e.clientY-t.top)/t.height)*2+1;const n=new Z;n.setFromCamera(i,this.camera);const a=new be(new p(0,1,0),-2),s=new p;n.ray.intersectPlane(a,s)&&(this.objectCreator.currentPosition.copy(s),this.objectCreator.createPreview(),console.log("[SimpleMine3DViewer] Updated creation position:",s))}handleObjectSelection(e){const t=this.renderer.domElement.getBoundingClientRect(),i=new te;i.x=(e.clientX-t.left)/t.width*2-1,i.y=-((e.clientY-t.top)/t.height)*2+1;const n=new Z;n.setFromCamera(i,this.camera);const a=[];this.scene.traverse(r=>{r.userData&&r.userData.selectable&&r.isMesh&&a.push(r)});const s=n.intersectObjects(a);if(s.length>0){const r=s[0].object;this.selectObject(r)}else this.deselectObject()}selectObject(e){this.selectedObject&&this.deselectObject(),this.selectedObject=e,this.transformControls.attach(e),this.addHighlight(e),console.log("[SimpleMine3DViewer] Object selected:",e.userData)}deselectObject(){this.selectedObject&&(this.transformControls.detach(),this.removeHighlight(this.selectedObject),this.selectedObject=null,console.log("[SimpleMine3DViewer] Object deselected")),this.objectCreator&&this.objectCreator.removePreview()}addHighlight(e){e.userData.originalMaterial||(e.userData.originalMaterial=e.material,e.material=e.material.clone(),e.material.emissive.setHex(4473924))}removeHighlight(e){e.userData.originalMaterial&&(e.material.dispose(),e.material=e.userData.originalMaterial,delete e.userData.originalMaterial)}markPathDirty(e){e&&(clearTimeout(this._pathSaveTimer),this.setPathDirtyVisual(!0),this._dirtyPaths.add(e),this._pathSaveTimer=setTimeout(async()=>{const t=this.pathDrawer.getPath(e);if(!t)return;const i=t.userData.pathData||{};try{await this.updatePathToServer(e,{points:i.points||i.path_points}),this._dirtyPaths.delete(e),this._dirtyPaths.size===0&&this.setPathDirtyVisual(!1)}catch{}},600))}setPathDirtyVisual(e){this._dirtyIndicatorEl||(this._dirtyIndicatorEl=document.getElementById("save-path-btn")),this._dirtyIndicatorEl&&(e?this._dirtyIndicatorEl.classList.add("dirty"):this._dirtyIndicatorEl.classList.remove("dirty"))}handleCanvasMouseMove(e){this.isPathDrawingMode&&this.pathDrawer.handleMouseMove(e)}handleKeyDown(e){console.log("[SimpleMine3DViewer] Key pressed:",e.key),e.key==="Escape"?(e.preventDefault(),this.isPathDrawingMode?(this.pathDrawer.stopDrawing(),this.stopPathDrawing()):this.isCreatingMode?this.stopCreating():this.selectedObject&&this.deselectObject()):e.key==="Enter"&&this.isPathDrawingMode?(e.preventDefault(),this.completeCurrentPath()):e.key==="Delete"||e.key==="Backspace"?(e.preventDefault(),this.selectedObject?this.deleteSelectedObject():console.log("[SimpleMine3DViewer] No object selected for deletion")):e.key==="g"||e.key==="G"?(e.preventDefault(),this.selectedObject&&this.transformControls.object&&this.cycleTransformMode()):(e.metaKey||e.ctrlKey)&&(e.key==="z"||e.key==="Z")?(e.preventDefault(),this.pathEditor&&this.pathEditor.isEditing&&this.pathEditor.undo()):(e.metaKey||e.ctrlKey)&&e.shiftKey&&(e.key==="z"||e.key==="Z")?(e.preventDefault(),this.pathEditor&&this.pathEditor.isEditing&&this.pathEditor.redo()):(e.key==="m"||e.key==="M")&&(e.preventDefault(),this.toggleMeasurements())}toggleMeasurements(e=null){const t=e===null?!this.measurementsEnabled:!!e;if(t!==this.measurementsEnabled){if(this.measurementsEnabled=t,!t)this._measurementGroup&&(this._measurementGroup.traverse(i=>{i.geometry&&i.geometry.dispose(),i.material&&i.material.dispose()}),this.scene.remove(this._measurementGroup),this._measurementGroup=null);else if(this._lastMeasuredTunnel){const{object:i,data:n}=this._lastMeasuredTunnel;this.buildTunnelMeasurements(i,n)}console.log("[SimpleMine3DViewer] Measurements toggled ->",this.measurementsEnabled)}}cycleTransformMode(){const e=this.transformControls.getMode(),t=["translate","rotate","scale"],i=t.indexOf(e),n=t[(i+1)%t.length];this.transformControls.setMode(n),console.log("[SimpleMine3DViewer] Transform mode changed to:",n)}async saveObjectToServer(e){var t,i;try{const n={mine_id:this.mineId,name:`${e.userData.type.charAt(0).toUpperCase()+e.userData.type.slice(1)} ${e.userData.id}`,type:e.userData.type,geometry:{type:e.userData.type,...e.userData.parameters},material:{color:e.material.color.getHex(),opacity:e.material.opacity||1},position:[e.position.x,e.position.y,e.position.z],rotation:[e.rotation.x,e.rotation.y,e.rotation.z],scale:[e.scale.x,e.scale.y,e.scale.z],properties:{createdAt:new Date().toISOString(),tool:e.userData.type},visible:!0,order:e.userData.id},a=await fetch(`/api/mines/${this.mineId}/models`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.getAttribute("content"))||"",Accept:"application/json"},body:JSON.stringify(n)});if(a.ok){const s=await a.json();e.userData.serverId=(i=s.data)==null?void 0:i.id,console.log("[SimpleMine3DViewer] Successfully saved object to server:",s),this.showSuccess("Obje başarıyla kaydedildi!")}else throw new Error(`HTTP ${a.status}: ${a.statusText}`)}catch(n){console.error("[SimpleMine3DViewer] Error saving object to server:",n),this.showError("Obje kaydedilemedi: "+n.message)}}showSuccess(e){const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #44aa44;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 10000;
        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&document.body.removeChild(t)},3e3)}showError(e){const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #ff4444;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 10000;
        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&document.body.removeChild(t)},3e3)}deleteSelectedObject(){if(this.selectedObject){const e=this.selectedObject;this.transformControls.detach(),this.scene.remove(e),e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose(),this.objectCreator.createdObjects.has(e.userData.id)&&this.objectCreator.createdObjects.delete(e.userData.id),this.selectedObject=null,console.log("[SimpleMine3DViewer] Object deleted:",e.userData),e.userData.serverId&&this.deleteFromServer(e.userData.serverId)}}async deleteFromServer(e){var t;try{const i=await fetch(`/api/mines/${this.mineId}/models/${e}`,{method:"DELETE",headers:{"X-CSRF-TOKEN":((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.getAttribute("content"))||"",Accept:"application/json"}});if(i.ok)console.log("[SimpleMine3DViewer] Successfully deleted from server"),this.showSuccess("Obje başarıyla silindi!");else throw new Error(`HTTP ${i.status}: ${i.statusText}`)}catch(i){console.error("[SimpleMine3DViewer] Error deleting from server:",i),this.showError("Obje silinemedi: "+i.message)}}setupObjectSelection(){this.objectSelector.setCallbacks({onObjectSelect:(e,t)=>this.onObjectSelected(e,t),onObjectDeselect:e=>this.onObjectDeselected(e),onObjectDelete:e=>this.onObjectDelete(e)})}onObjectSelected(e,t){const i=t||e&&e.userData&&e.userData.objectData||e.userData||{};if(console.log("[SimpleMine3DViewer] Object selected:",i),this.selectedObject=e,this.showObjectInfo(i),i&&(i.pathType||i.type==="path")&&this.pathEditor){const n=e.parent&&e.parent.userData&&e.parent.userData.pathData?e.parent:e;this.pathEditor.startEditing(n)}i&&i.type==="tunnel"&&(this.buildTunnelMeasurements(e,i),this.showTunnelEditPanel(e,i))}onObjectDeselected(e){console.log("[SimpleMine3DViewer] Object deselected"),this._measurementGroup&&(this._measurementGroup.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()}),this.scene.remove(this._measurementGroup),this._measurementGroup=null),this.selectedObject=null,this.hideObjectInfo(),this.hideTunnelEditPanel(),this.pathEditor&&this.pathEditor.isEditing&&this.pathEditor.stopEditing()}async onObjectDelete(e){var i;console.log("[SimpleMine3DViewer] Deleting object:",e.userData.objectData);const t=e.userData.objectData;if(t&&t.id&&t.type==="path")try{const n=await fetch(`/api/mines/${this.mineId}/paths/${t.id}`,{method:"DELETE",headers:{"X-CSRF-TOKEN":((i=document.querySelector('meta[name="csrf-token"]'))==null?void 0:i.getAttribute("content"))||"",Accept:"application/json"}});if(n.ok)this.pathDrawer.removePath(t.id),this.objectSelector.removeSelectableObject(e),console.log("[SimpleMine3DViewer] Path deleted successfully");else throw new Error(`HTTP ${n.status}: ${n.statusText}`)}catch(n){console.error("[SimpleMine3DViewer] Error deleting path:",n),this.showError("Yol silinemedi: "+n.message)}}startPathDrawing(){this.isPathDrawingMode=!0,this.controls.enabled=!1,this.pathDrawer.startDrawing({onPathStart:()=>console.log("[SimpleMine3DViewer] Yol çizimi başladı"),onPathUpdate:e=>console.log("[SimpleMine3DViewer] Yol güncellendi, nokta sayısı:",e.length),onPathComplete:e=>this.onPathDrawingComplete(e)}),this.showPathDrawingUI(!0),console.log("[SimpleMine3DViewer] Yol çizim modu aktif")}stopPathDrawing(){this.isPathDrawingMode=!1,this.controls.enabled=!0,this.pathDrawer.stopDrawing(),this.showPathDrawingUI(!1),console.log("[SimpleMine3DViewer] Yol çizim modu pasif")}completeCurrentPath(){if(this.isPathDrawingMode){console.log("[SimpleMine3DViewer] Manual path completion");const e=this.pathDrawer.completePath();e&&e.length>1&&(this.onPathDrawingComplete(e),this.stopPathDrawing())}}onPathDrawingComplete(e){console.log("[SimpleMine3DViewer] Yol çizimi tamamlandı:",e),this.savePathToServer(e).then(t=>{if(t){const i=this.pathDrawer.createPath({id:t.id,points:e,width:t.width||2.5,height:t.height||2.5,color:t.color||"#808080",type:t.type||"tunnel"});i&&this.objectSelector&&this.objectSelector.addSelectableObject(i,{id:t.id,type:"path",name:t.name,pathType:t.type,width:t.width,height:t.height,color:t.color,material:t.material,points:e.map(n=>({x:n.x,y:n.y,z:n.z})),length:this.pathDrawer.calculatePathLength(e.map(n=>({x:n.x,y:n.y,z:n.z})))})}}).catch(t=>{console.error("[SimpleMine3DViewer] Yol kaydetme hatası:",t),this.showError("Yol kaydedilemedi: "+t.message)})}async savePathToServer(e){var t;try{const i={mine_id:this.mineId,name:`Yol ${Date.now()}`,type:"tunnel",path_points:e.map(r=>({x:r.x,y:r.y,z:r.z})),width:2.5,height:2.5,color:"#808080",status:"active"},n=await fetch(`/api/mines/${this.mineId}/paths`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.getAttribute("content"))||"",Accept:"application/json"},body:JSON.stringify(i)});if(!n.ok){const r=await n.json().catch(()=>({}));throw new Error(r.message||`HTTP ${n.status}: ${n.statusText}`)}const a=await n.json(),s=a.data||a;return console.log("[SimpleMine3DViewer] Yol başarıyla kaydedildi:",s),s}catch(i){throw console.error("[SimpleMine3DViewer] Yol kaydetme hatası:",i),i}}async updatePathToServer(e,t){var i;try{const n={...t};n.points&&!n.path_points&&(n.path_points=n.points.map(l=>({x:l.x,y:l.y,z:l.z})),delete n.points);const a=await fetch(`/api/mines/${this.mineId}/paths/${e}`,{method:"PUT",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":((i=document.querySelector('meta[name="csrf-token"]'))==null?void 0:i.getAttribute("content"))||"",Accept:"application/json"},body:JSON.stringify(n)});if(!a.ok){const l=await a.json().catch(()=>({}));throw new Error(l.message||`HTTP ${a.status}: ${a.statusText}`)}const s=await a.json();console.log("[SimpleMine3DViewer] Yol güncellendi:",s.data||s),this.showSuccess("Yol güncellendi");const r=document.getElementById("save-path-btn");return r&&(r.classList.add("saved-once"),setTimeout(()=>r.classList.remove("saved-once"),400)),s.data||s}catch(n){throw console.error("[SimpleMine3DViewer] Yol güncelleme hatası:",n),this.showError("Yol güncellenemedi: "+n.message),n}}dispose(){if(console.log("[SimpleMine3DViewer] Disposing viewer"),window.removeEventListener("resize",this._resizeHandler),document.removeEventListener("keydown",this._keyHandler),this.renderer&&this.renderer.domElement){const e=this.renderer.domElement;e.removeEventListener("click",this._clickHandler),e.removeEventListener("mousemove",this._mouseMoveHandler)}this.scene&&this.scene.traverse(e=>{e.isMesh&&(e.geometry&&e.geometry.dispose(),e.material&&(Array.isArray(e.material)?e.material.forEach(t=>t.dispose()):e.material.dispose()))}),this.renderer&&this.renderer.dispose(),this.scene=null,this.camera=null,this.renderer=null}buildTunnelMeasurements(e,t){if(!this.measurementsEnabled||!e||!e.geometry)return;this._measurementGroup&&(this._measurementGroup.traverse(g=>{g.geometry&&g.geometry.dispose(),g.material&&g.material.dispose()}),this.scene.remove(this._measurementGroup));const i=new je;i.name="tunnel_measurements",this._measurementGroup=i,this.scene.add(i),this._lastMeasuredTunnel={object:e,data:t};const n=t.parameters||{},a=n.width||3,s=n.height||3,r=n.length||10,u=(n.orientation||"horizontal")==="vertical"?"y":"z",o=e.position.clone(),d=new R({color:43775,transparent:!0,opacity:.85,depthTest:!1,depthWrite:!1}),c=new R({color:30668,transparent:!0,opacity:.45,depthTest:!1,depthWrite:!1}),y="#00aaff",f=(g,E,v)=>{const S=new ee().setFromPoints([g,E]);return new j(S,v)},M=5;for(let g=M;g<r+.001;g+=M){const v=(g/r-.5)*r;let S,L;if(u==="z"){const G=o.y+s/2+.02;S=new p(o.x-a/2,G,o.z+v),L=new p(o.x+a/2,G,o.z+v)}else{const G=o.z-s/2-.02;S=new p(o.x-a/2,o.y+v,G),L=new p(o.x+a/2,o.y+v,G)}const pe=f(S,L,d);i.add(pe),this._addSpriteLabel(`${g}m`,L.clone().add(new p(.2,.2,0)),y,i)}const P=.5,C=.5,w=0;for(let g=-a/2;g<=a/2+.001;g+=P){let E,v;if(u==="z"){const S=o.z+w;E=new p(o.x+g,o.y-s/2+.01,S),v=new p(o.x+g,o.y+s/2+.01,S)}else{const S=o.z-s/2;E=new p(o.x+g,o.y+w,S+.01),v=new p(o.x+g,o.y+w,o.z+s/2+.01)}i.add(f(E,v,c))}for(let g=-s/2;g<=s/2+.001;g+=C){let E,v;if(u==="z"){const S=o.z+w;E=new p(o.x-a/2,o.y+g,S+.01),v=new p(o.x+a/2,o.y+g,S+.01)}else{const S=o.z-s/2-.01;E=new p(o.x-a/2,o.y+w,S+g),v=new p(o.x+a/2,o.y+w,S+g)}i.add(f(E,v,c))}}ensureTunnelEditPanel(){if(this._tunnelEditPanel)return this._tunnelEditPanel;const e=document.createElement("div");return e.id="tunnel-edit-panel",e.style.cssText="position:fixed;top:12px;right:12px;z-index:1200;background:rgba(0,0,0,0.85);color:#fff;padding:14px 16px;border-radius:8px;font:12px/1.4 Arial, sans-serif;min-width:200px;box-shadow:0 4px 14px rgba(0,0,0,0.4);display:none;",e.innerHTML=`
          <div style="font-weight:bold;margin-bottom:6px;">Tünel Düzenle</div>
          <label style="display:block;margin-bottom:4px;">Genişlik <input type="number" step="0.1" min="0.5" id="te-width" style="width:70px;margin-left:4px;background:#222;border:1px solid #444;color:#fff;padding:2px 4px;"/></label>
          <label style="display:block;margin-bottom:4px;">Yükseklik <input type="number" step="0.1" min="0.5" id="te-height" style="width:70px;margin-left:4px;background:#222;border:1px solid #444;color:#fff;padding:2px 4px;"/></label>
          <label style="display:block;margin-bottom:4px;">Uzunluk <input type="number" step="0.5" min="1" id="te-length" style="width:80px;margin-left:4px;background:#222;border:1px solid #444;color:#fff;padding:2px 4px;"/></label>
          <label style="display:block;margin-bottom:6px;">Açı <input type="number" step="1" min="0" max="360" id="te-angle" style="width:60px;margin-left:4px;background:#222;border:1px solid #444;color:#fff;padding:2px 4px;"/></label>
          <div style="display:flex;gap:6px;justify-content:space-between;margin-top:6px;">
            <button id="te-save" style="flex:1;background:#1e7e34;border:none;color:#fff;padding:6px 4px;border-radius:4px;cursor:pointer;font-weight:bold;">Kaydet</button>
            <button id="te-cancel" style="flex:1;background:#6c757d;border:none;color:#fff;padding:6px 4px;border-radius:4px;cursor:pointer;">İptal</button>
          </div>
          <div style="display:flex;gap:6px;justify-content:space-between;margin-top:6px;">
            <button id="te-close" style="flex:1;background:#444;border:none;color:#ddd;padding:5px 4px;border-radius:4px;cursor:pointer;">Kapat</button>
            <button id="te-reset" style="flex:1;background:#b54708;border:none;color:#fff;padding:5px 4px;border-radius:4px;cursor:pointer;">Geri Al</button>
          </div>
          <div id="te-status" style="margin-top:6px;font-size:11px;color:#8fd4ff;min-height:14px;"></div>
        `,document.body.appendChild(e),this._tunnelEditPanel=e,e.querySelector("#te-close").addEventListener("click",()=>this.hideTunnelEditPanel()),e.querySelector("#te-cancel").addEventListener("click",()=>this.revertTunnelTempChanges()),e.querySelector("#te-reset").addEventListener("click",()=>this.revertTunnelTempChanges()),e.querySelector("#te-save").addEventListener("click",()=>this.saveTunnelEdits()),["te-width","te-height","te-length","te-angle"].forEach(t=>{e.querySelector("#"+t).addEventListener("input",()=>this.updateTunnelGeometryFromInputs())}),e}showTunnelEditPanel(e,t){if(!e||!t||t.type!=="tunnel")return;const i=this.ensureTunnelEditPanel();i.style.display="block",this._tunnelOriginalParams=JSON.parse(JSON.stringify(t.parameters||{})),this._tunnelEditingObject=e,this._tunnelEditingData=t,i.querySelector("#te-width").value=t.parameters.width,i.querySelector("#te-height").value=t.parameters.height,i.querySelector("#te-length").value=t.parameters.length,i.querySelector("#te-angle").value=t.parameters.angle||0,i.querySelector("#te-status").textContent=""}hideTunnelEditPanel(){this._tunnelEditPanel&&(this._tunnelEditPanel.style.display="none"),this._tunnelEditingObject=null,this._tunnelEditingData=null,this._tunnelOriginalParams=null}revertTunnelTempChanges(){if(!this._tunnelEditingObject||!this._tunnelOriginalParams)return;Object.assign(this._tunnelEditingData.parameters,this._tunnelOriginalParams),this.replaceTunnelGeometry(this._tunnelEditingObject,this._tunnelEditingData.parameters);const e=this._tunnelOriginalParams;this._tunnelEditPanel.querySelector("#te-width").value=e.width,this._tunnelEditPanel.querySelector("#te-height").value=e.height,this._tunnelEditPanel.querySelector("#te-length").value=e.length,this._tunnelEditPanel.querySelector("#te-angle").value=e.angle||0,this._tunnelEditPanel.querySelector("#te-status").textContent="İptal edildi"}updateTunnelGeometryFromInputs(){if(!this._tunnelEditingObject||!this._tunnelEditingData)return;const e=parseFloat(this._tunnelEditPanel.querySelector("#te-width").value)||1,t=parseFloat(this._tunnelEditPanel.querySelector("#te-height").value)||1,i=parseFloat(this._tunnelEditPanel.querySelector("#te-length").value)||1,n=parseFloat(this._tunnelEditPanel.querySelector("#te-angle").value)||0,a=this._tunnelEditingData.parameters;a.width=Math.max(.5,e),a.height=Math.max(.5,t),a.length=Math.max(1,i),a.angle=n%360,this.replaceTunnelGeometry(this._tunnelEditingObject,a),this._tunnelEditPanel.querySelector("#te-status").textContent="(Kaydedilmedi)"}replaceTunnelGeometry(e,t){if(!this.objectCreator)return;const i=this.objectCreator.createGeometry("tunnel",t);e.geometry&&e.geometry.dispose(),e.geometry=i,e.userData.parameters={...t},this.measurementsEnabled&&this.buildTunnelMeasurements(e,{type:"tunnel",parameters:t})}async saveTunnelEdits(){var t;if(!this._tunnelEditingObject||!this._tunnelEditingData)return;const e=this._tunnelEditingData.parameters;try{if(this._tunnelEditingObject.userData.serverId){const i=await fetch(`/api/mines/${this.mineId}/models/${this._tunnelEditingObject.userData.serverId}`,{method:"PUT",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((t=document.querySelector('meta[name="csrf-token"]'))==null?void 0:t.getAttribute("content"))||""},body:JSON.stringify({parameters:e})});if(!i.ok)throw new Error("HTTP "+i.status)}this._tunnelOriginalParams=JSON.parse(JSON.stringify(e)),this._tunnelEditPanel.querySelector("#te-status").textContent="Kaydedildi",this.showSuccess("Tünel güncellendi")}catch(i){console.error("Tunnel save error",i),this.showError("Tünel kaydedilemedi: "+i.message),this._tunnelEditPanel.querySelector("#te-status").textContent="Hata"}}_addSpriteLabel(e,t,i,n){const a=document.createElement("canvas"),s=256;a.width=s,a.height=s;const r=a.getContext("2d");r.fillStyle="rgba(0,0,0,0.0)",r.fillRect(0,0,s,s),r.fillStyle=i||"#ffffff",r.font="48px Arial",r.textAlign="center",r.textBaseline="middle",r.fillText(e,s/2,s/2);const l=new et(a);l.needsUpdate=!0;const u=new tt({map:l,transparent:!0}),o=new it(u);o.scale.set(1.5,1.5,1.5),o.position.copy(t),n.add(o)}showPathDrawingUI(e){console.log("[SimpleMine3DViewer] Path drawing UI:",e?"show":"hide");const t=document.getElementById("path-controls"),i=document.getElementById("draw-path-btn"),n=document.getElementById("path-btn-text");e?(t&&(t.style.display="block"),n&&(n.textContent="Çizimi Bitir"),i&&(i.classList.remove("btn-outline-warning"),i.classList.add("btn-warning"))):(t&&(t.style.display="none"),n&&(n.textContent="Yol Çiz"),i&&(i.classList.remove("btn-warning"),i.classList.add("btn-outline-warning")));const a=document.getElementById("path-drawing-overlay");if(e&&!a){const s=document.createElement("div");s.id="path-drawing-overlay",s.innerHTML=`
                <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                           background: rgba(0,0,0,0.8); color: white; padding: 20px; border-radius: 10px;
                           text-align: center; z-index: 1000;">
                    <h5>Yol Çizim Modu</h5>
                    <p>Yol noktalarını tıklayarak belirleyin</p>
                    <small>Enter: Tamamla | Escape: İptal</small>
                </div>
            `,this.container.appendChild(s)}else!e&&a&&a.remove()}showError(e){const t=document.getElementById("error-content");t?(t.textContent=e,new bootstrap.Modal(document.getElementById("errorModal")).show()):alert(e)}showObjectInfo(e){const t=document.getElementById("object-info-panel"),i=document.getElementById("object-info-content");if(t&&i){let n=`
                <h6 class="mb-2">${e.name||"Seçili Obje"}</h6>
                <div class="mb-2">
                    <small class="text-muted">Tip:</small><br>
                    <span class="badge bg-primary">${this.getTypeDisplayName(e.pathType)}</span>
                </div>
            `;if(e.type==="path"){n+=`
                    <div class="mb-2">
                        <small class="text-muted">Fiziksel Özellikler:</small><br>
                        <div class="row">
                            <div class="col-6"><small>Genişlik: ${e.width}m</small></div>
                            <div class="col-6"><small>Yükseklik: ${e.height}m</small></div>
                        </div>
                        <small>Uzunluk: ${e.length.toFixed(2)}m</small><br>
                        <small>Malzeme: ${e.material||"N/A"}</small>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Renk:</small><br>
                        <span class="badge" style="background-color: ${e.color}; color: white;">${e.color}</span>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Nokta Sayısı:</small><br>
                        <span>${e.points.length} nokta</span>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Segmentler:</small><br>
                `;for(let a=1;a<e.points.length;a++){const s=e.points[a-1],r=e.points[a],l=r.x-s.x,u=r.y-s.y,o=r.z-s.z,d=Math.sqrt(l*l+u*u+o*o);n+=`<small>Segment ${a}: ${d.toFixed(2)}m</small><br>`}n+=`
                    </div>
                    <div class="d-grid gap-1">
                        <button class="btn btn-outline-warning btn-sm" onclick="window.mineViewer.editSelectedObject()">
                            <i class="fas fa-edit"></i> Düzenle
                        </button>
                        <button class="btn btn-outline-danger btn-sm" onclick="window.mineViewer.deleteSelectedObject()">
                            <i class="fas fa-trash"></i> Sil
                        </button>
                    </div>
                `}i.innerHTML=n,t.style.display="block"}}hideObjectInfo(){const e=document.getElementById("object-info-panel");e&&(e.style.display="none")}getTypeDisplayName(e){return{tunnel:"Tünel",road:"Yol",rail:"Ray",conveyor:"Konveyör"}[e]||e}editSelectedObject(){if(this.selectedObject){const e=this.selectedObject.userData.objectData;console.log("[SimpleMine3DViewer] Editing object:",e),alert("Düzenleme özelliği yakında gelecek!")}}deleteSelectedObject(){this.selectedObject&&confirm("Bu objeyi silmek istediğinizden emin misiniz?")&&this.objectSelector.deleteSelectedObject()}setCameraPreset(e){switch(e){case"overview":this.camera.position.set(25,15,35),this.controls.target.set(0,-2,0);break;case"side":this.camera.position.set(40,0,0),this.controls.target.set(0,-3,0);break;case"top":this.camera.position.set(0,30,0),this.controls.target.set(0,-3,0);break;case"underground":this.camera.position.set(10,-40,25),this.controls.target.set(0,-45,0);break;case"close":this.camera.position.set(8,2,12),this.controls.target.set(0,-1,0);break;default:this.camera.position.set(15,5,25),this.controls.target.set(0,-3,0)}this.controls.update()}animateCameraTo(e,t,i=1500){if(!this.camera||!this.controls)return;const n=this.camera.position.clone(),a=this.controls.target.clone(),s=new p().copy(e),r=new p().copy(t);let l=null;const u=o=>{l||(l=o);const d=o-l,c=Math.min(d/i,1),y=c<.5?4*c*c*c:(c-1)*(2*c-2)*(2*c-2)+1;this.camera.position.lerpVectors(n,s,y),this.controls.target.lerpVectors(a,r,y),this.controls.update(),c<1&&requestAnimationFrame(u)};requestAnimationFrame(u)}}window.SimpleMine3DViewer=ft;
